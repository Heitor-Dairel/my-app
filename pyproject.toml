[project]
name = "my-app"
version = "0.0.1"
description = "Uma breve descrição do seu projeto."
authors = [{ name = "Heitor Dairel" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12" # Minimum Python version required
dependencies = [
    "cffi>=1.17.1",
    "click>=8.2.1",
    "colorama>=0.4.6",
    "mypy_extensions>=1.1.0",
    "numpy>=2.3.2",
    "packaging>=25.0",
    "pathspec>=0.12.1",
    "platformdirs>=4.4.0",
    "pytest>=8.4.1",
    "pycparser>=2.22",
    "sounddevice>=0.5.2",
    "uv>=0.8.13",
    "cryptography>=45.0.6",
    "argon2-cffi>=25.1.0",
    "python-dotenv>=1.1.1",
    "cython>=3.1.3",
    "setuptools>=80.9.0",
    "oracledb>=3.3.0",
    "pydantic>=2.11.9",
    "rich>=14.1.0",
    "aiofiles>=24.1.0",
    "opencv-python>=4.11.0.86",
    "mediapipe>=0.10.14",
]

[tool.pyright]
typeCheckingMode = "basic"
reportAttributeAccessIssue = "none"
pythonVersion = "3.12"
include = ["src", "tests"]
exclude = [
    "**/venv",
    "**/.venv",
    "**/env",
    "**/.env",
    "**/node_modules",
    "**/__pycache__",
]
venv = ".venv"
venvPath = "."
# executionEnvironments = [{ root = "src" }]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "-s --color=yes --tb=short"
# Adiciona 'src' ao path do Python durante os testes. Isso permite que
# os testes em `tests/` importem os módulos de `src/` sem erros.
